[
  {
    "objectID": "nbs_to_fh.html",
    "href": "nbs_to_fh.html",
    "title": "Converting a Notebook to a FastHTML view",
    "section": "",
    "text": "import nbformat\nfrom fasthtml.common import *\n\n\nwith open(\"elements/00_button.ipynb\") as f:\n    nb = nbformat.read(f, as_version=4)\n\nfts_to_document = []\n\nfor cell in nb.cells:\n    cell_lines = cell.source.split(\"\\n\")\n    if cell.cell_type == \"code\" and cell_lines[0] == \"# | export\":\n        # HACK: Find all FastTags in the notebook\n        if cell_lines[2].endswith(\"-&gt; FT:\") or cell_lines[2].endswith(\"-&gt;FT\"):\n            # Append this cell to the list of FastTags to document, but without the export line\n            fts_to_document.append(\"\\n\".join(cell_lines[1:]))\n    \nlen(fts_to_document)\n\n2\n\n\nFor each FastTag 1) print the code cell in a Pre(Code()) element 2) find the next code cell that starts with show( and put that in the view\nA FastHTML view corresponding to a Button component notebook may be something like:\n@rt(\"/button\")\ndef get():\n    return render_nb(\"00_button.ipynb\")\nWe can get fancy laterâ€¦for now put them in divs with a border:\n\nfui_button_docs = [Div(fui_ft, cls=\"ui segment\") for fui_ft in fts_to_document]\nfui_button_docs\n\n[['div',\n  ('@delegates(Button, keep=True)\\ndef FButton(*c, cls=\"ui button\", **kwargs) -&gt; FT:\\n    \"A standard Fomantic UI Button, extending the existing Button FastTag.\"\\n    return Button(*c, cls=cls, **kwargs)',),\n  {'class': 'ui segment'}],\n ['div',\n  ('@delegates(Button, keep=True)\\ndef FAnimatedButton(visible, hidden, tabindex=0, cls=\"ui animated button\", **kwargs) -&gt; FT:\\n    \"Animates to show hidden content\"\\n    return Button(Div(visible, cls=\"visible content\"), Div(hidden, cls=\"hidden content\"), cls=cls, **kwargs)',),\n  {'class': 'ui segment'}]]"
  },
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "Fomantic UI FastTags",
    "section": "",
    "text": "FastTags for the Fomantic UI elements, collections, views, and modules from fomantic-ui.com.\nIncomplete and growing. Contributions are welcome!\nNote: the FastTags in this core notebook will be broken up into separate notebooks paralleling the Fomantic UI documentation.\n\n\nFButton\n\n FButton (*c, cls='ui button', target_id=None, id=None, title=None,\n          style=None, accesskey=None, contenteditable=None, dir=None,\n          draggable=None, enterkeyhint=None, hidden=None, inert=None,\n          inputmode=None, lang=None, popover=None, spellcheck=None,\n          tabindex=None, translate=None, hx_get=None, hx_post=None,\n          hx_put=None, hx_delete=None, hx_patch=None, hx_trigger=None,\n          hx_target=None, hx_swap=None, hx_include=None, hx_select=None,\n          hx_indicator=None, hx_push_url=None, hx_confirm=None,\n          hx_disable=None, hx_replace_url=None, hx_on=None, **kwargs)\n\nA Fomantic UI Button, extending the existing Button component\n\nshow(FButton(\"Click me\"))\n\nClick me\n\n\n\nFButton(\"Click me\")\n\n&lt;button class=\"ui button\"&gt;Click me&lt;/button&gt;\n\n\n\n\n\nFContainer\n\n FContainer (*c, cls='ui container', target_id=None, id=None, title=None,\n             style=None, accesskey=None, contenteditable=None, dir=None,\n             draggable=None, enterkeyhint=None, hidden=None, inert=None,\n             inputmode=None, lang=None, popover=None, spellcheck=None,\n             tabindex=None, translate=None, hx_get=None, hx_post=None,\n             hx_put=None, hx_delete=None, hx_patch=None, hx_trigger=None,\n             hx_target=None, hx_swap=None, hx_include=None,\n             hx_select=None, hx_indicator=None, hx_push_url=None,\n             hx_confirm=None, hx_disable=None, hx_replace_url=None,\n             hx_on=None, **kwargs)\n\nA Fomantic UI Container\n\nFContainer(\"Hello World\")\n\n&lt;div class=\"ui container\"&gt;Hello World&lt;/div&gt;\n\n\n\n\n\nFGrid\n\n FGrid (*c, cls='ui grid', target_id=None, id=None, title=None,\n        style=None, accesskey=None, contenteditable=None, dir=None,\n        draggable=None, enterkeyhint=None, hidden=None, inert=None,\n        inputmode=None, lang=None, popover=None, spellcheck=None,\n        tabindex=None, translate=None, hx_get=None, hx_post=None,\n        hx_put=None, hx_delete=None, hx_patch=None, hx_trigger=None,\n        hx_target=None, hx_swap=None, hx_include=None, hx_select=None,\n        hx_indicator=None, hx_push_url=None, hx_confirm=None,\n        hx_disable=None, hx_replace_url=None, hx_on=None, **kwargs)\n\nA Fomantic UI Grid\n\nFGrid(\"Hello World\")\n\n&lt;div class=\"ui grid\"&gt;Hello World&lt;/div&gt;\n\n\n\ndef num2word(n):\n    words = [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\"]\n    return words[n-1]\n\n\n\n\nFColumn\n\n FColumn (*c, cls='column', target_id=None, id=None, title=None,\n          style=None, accesskey=None, contenteditable=None, dir=None,\n          draggable=None, enterkeyhint=None, hidden=None, inert=None,\n          inputmode=None, lang=None, popover=None, spellcheck=None,\n          tabindex=None, translate=None, hx_get=None, hx_post=None,\n          hx_put=None, hx_delete=None, hx_patch=None, hx_trigger=None,\n          hx_target=None, hx_swap=None, hx_include=None, hx_select=None,\n          hx_indicator=None, hx_push_url=None, hx_confirm=None,\n          hx_disable=None, hx_replace_url=None, hx_on=None, **kwargs)\n\nA Fomantic UI Grid Column\n\nFGrid(FColumn(\"Hello World\", width=4), FColumn(\"Hello World 2\", width=12))\n\n&lt;div class=\"ui grid\"&gt;\n  &lt;div class=\"four wide column\"&gt;Hello World&lt;/div&gt;\n  &lt;div class=\"twelve wide column\"&gt;Hello World 2&lt;/div&gt;\n&lt;/div&gt;\n\n\n\n\n\nFForm\n\n FForm (*c, cls='ui form', target_id=None, id=None, title=None,\n        style=None, accesskey=None, contenteditable=None, dir=None,\n        draggable=None, enterkeyhint=None, hidden=None, inert=None,\n        inputmode=None, lang=None, popover=None, spellcheck=None,\n        tabindex=None, translate=None, hx_get=None, hx_post=None,\n        hx_put=None, hx_delete=None, hx_patch=None, hx_trigger=None,\n        hx_target=None, hx_swap=None, hx_include=None, hx_select=None,\n        hx_indicator=None, hx_push_url=None, hx_confirm=None,\n        hx_disable=None, hx_replace_url=None, hx_on=None, **kwargs)\n\nA Fomantic UI Form\n\nFForm(FButton(\"Submit\"))\n\n&lt;form class=\"ui form\"&gt;\n  &lt;button class=\"ui button\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n\n\n\n\n\nFInput\n\n FInput (*c, cls='ui input', target_id=None, id=None, title=None,\n         style=None, accesskey=None, contenteditable=None, dir=None,\n         draggable=None, enterkeyhint=None, hidden=None, inert=None,\n         inputmode=None, lang=None, popover=None, spellcheck=None,\n         tabindex=None, translate=None, hx_get=None, hx_post=None,\n         hx_put=None, hx_delete=None, hx_patch=None, hx_trigger=None,\n         hx_target=None, hx_swap=None, hx_include=None, hx_select=None,\n         hx_indicator=None, hx_push_url=None, hx_confirm=None,\n         hx_disable=None, hx_replace_url=None, hx_on=None, **kwargs)\n\nA Semantic UI Input\n\nFForm(FInput(placeholder=\"Enter your name\"), FButton(\"Submit\"))\n\n&lt;form class=\"ui form\"&gt;\n  &lt;div class=\"ui input\"&gt;\n    &lt;input placeholder=\"Enter your name\"&gt;\n  &lt;/div&gt;\n  &lt;button class=\"ui button\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n\n\n\nshow(FForm(FInput(placeholder=\"Enter your name\"), FButton(\"Submit\")))\n\n\n  \n    \n  \n  Submit\n\n\n\n\n\n\nFDropdown\n\n FDropdown (placeholder, options, cls='ui dropdown', target_id=None,\n            id=None, title=None, style=None, accesskey=None,\n            contenteditable=None, dir=None, draggable=None,\n            enterkeyhint=None, hidden=None, inert=None, inputmode=None,\n            lang=None, popover=None, spellcheck=None, tabindex=None,\n            translate=None, hx_get=None, hx_post=None, hx_put=None,\n            hx_delete=None, hx_patch=None, hx_trigger=None,\n            hx_target=None, hx_swap=None, hx_include=None, hx_select=None,\n            hx_indicator=None, hx_push_url=None, hx_confirm=None,\n            hx_disable=None, hx_replace_url=None, hx_on=None, **kwargs)\n\nA Semantic UI Dropdown\n\nFDropdown(\"Select a value\", [\"Option 1\", \"Option 2\", \"Option 3\"])\n\n&lt;select placeholder=\"Select a value\" class=\"ui dropdown\"&gt;\n  &lt;option text=\"Option 1\" value=\"Option 1\"&gt;&lt;/option&gt;\n  &lt;option text=\"Option 2\" value=\"Option 2\"&gt;&lt;/option&gt;\n  &lt;option text=\"Option 3\" value=\"Option 3\"&gt;&lt;/option&gt;\n&lt;/select&gt;",
    "crumbs": [
      "Fomantic UI FastTags"
    ]
  },
  {
    "objectID": "elements/icon.html",
    "href": "elements/icon.html",
    "title": "Icons",
    "section": "",
    "text": "Icon FastTags based on https://fomantic-ui.com/elements/icon.html",
    "crumbs": [
      "Elements",
      "Icons"
    ]
  },
  {
    "objectID": "elements/icon.html#audio-video",
    "href": "elements/icon.html#audio-video",
    "title": "Icons",
    "section": "Audio & Video",
    "text": "Audio & Video\nIcons representing common ways to interact with audio and video\n\nav_descs = [\"audio description\", \"backward\", \"broadcast tower\", \"circle\", \"circle outline\", \"closed captioning\", \"closed captioning outline\", \"compress\", \"compress alternate\", \"compress arrows alternate\", \"eject\", \"expand\", \"expand alternate\", \"expand arrows alternate\", \"fast backward\", \"fast forward\", \"file audio\", \"file audio outline\", \"file video\", \"file video outline\", \"film\", \"forward\", \"headphones\", \"microphone\", \"microphone alternate\", \"microphone alternate slash\", \"microphone slash\", \"music\", \"pause\", \"pause circle\", \"pause circle outline\", \"phone volume\", \"photo video\", \"play\", \"play circle\", \"play circle outline\", \"podcast\", \"random\", \"redo\", \"redo alternate\", \"rss\", \"rss square\", \"step backward\", \"step forward\", \"stop\", \"stop circle\", \"stop circle outline\", \"sync\", \"sync alternate\", \"tv\", \"undo\", \"undo alternate\", \"video\", \"volume down\", \"volume mute\", \"volume off\", \"volume up\", \"youtube\",]\n\nshow(*[Icon(desc) for desc in av_descs])",
    "crumbs": [
      "Elements",
      "Icons"
    ]
  },
  {
    "objectID": "elements/emoji.html",
    "href": "elements/emoji.html",
    "title": "Emoji",
    "section": "",
    "text": "Emoji FastTags based on https://fomantic-ui.com/elements/emoji.html\n\n\nEmoji\n\n Emoji (desc, disabled=False, loading=False, target_id=None, id=None,\n        cls=None, title=None, style=None, accesskey=None,\n        contenteditable=None, dir=None, draggable=None, enterkeyhint=None,\n        hidden=None, inert=None, inputmode=None, lang=None, popover=None,\n        spellcheck=None, tabindex=None, translate=None, hx_get=None,\n        hx_post=None, hx_put=None, hx_delete=None, hx_patch=None,\n        hx_trigger=None, hx_target=None, hx_swap=None, hx_include=None,\n        hx_select=None, hx_indicator=None, hx_push_url=None,\n        hx_confirm=None, hx_disable=None, hx_replace_url=None, hx_on=None,\n        **kwargs)\n\nA Fomantic UI Icon\n\nEmoji(\"smile\")\n\n&lt;em data-emoji=\"smile\" class=\"\" style=\"visibility: visible;\"&gt;&lt;/em&gt;\n\n\n\nEmoji(\"smile\", disabled=True)\n\n&lt;em data-emoji=\"smile\" class=\" disabled\" style=\"visibility: visible;\"&gt;&lt;/em&gt;\n\n\n\nEmoji(\"smile\", disabled=True, loading=True)\n\n&lt;em data-emoji=\"smile\" class=\" disabled loading\" style=\"visibility: visible;\"&gt;&lt;/em&gt;",
    "crumbs": [
      "Elements",
      "Emoji"
    ]
  },
  {
    "objectID": "elements/button.html",
    "href": "elements/button.html",
    "title": "Buttons",
    "section": "",
    "text": "Button FastTags based on https://fomantic-ui.com/elements/button.html\nFastHTML comes with a simple Button FastTag, which comes from fasthtml/nbs/api/01_components.ipynb. We extend this FastTag to create all the Fomantic UI button types, variations, etc.",
    "crumbs": [
      "Elements",
      "Buttons"
    ]
  },
  {
    "objectID": "elements/button.html#types",
    "href": "elements/button.html#types",
    "title": "Buttons",
    "section": "Types",
    "text": "Types\n\n\nFButton\n\n FButton (*c, cls='ui button', target_id=None, id=None, title=None,\n          style=None, accesskey=None, contenteditable=None, dir=None,\n          draggable=None, enterkeyhint=None, hidden=None, inert=None,\n          inputmode=None, lang=None, popover=None, spellcheck=None,\n          tabindex=None, translate=None, hx_get=None, hx_post=None,\n          hx_put=None, hx_delete=None, hx_patch=None, hx_trigger=None,\n          hx_target=None, hx_swap=None, hx_include=None, hx_select=None,\n          hx_indicator=None, hx_push_url=None, hx_confirm=None,\n          hx_disable=None, hx_replace_url=None, hx_on=None, **kwargs)\n\nA standard Fomantic UI Button, extending the existing Button FastTag.\n\nFButton(\"Follow\")\n\n&lt;button class=\"ui button\"&gt;Follow&lt;/button&gt;\n\n\n\nshow(FButton(\"Follow\"))\n\nFollow\n\n\n\n\nEmphasis\nA button can be formatted to show different levels of emphasis\n\nFButton(\"Save\", cls=\"ui primary button\"), FButton(\"Discard\")\n\n(['button', ('Save',), {'class': 'ui primary button'}],\n ['button', ('Discard',), {'class': 'ui button'}])\n\n\n\nshow(FButton(\"Save\", cls=\"ui primary button\"), FButton(\"Discard\"))\n\nSave\n\nDiscard\n\n\n\nshow(FButton(\"OK\", cls=\"ui secondary button\"), FButton(\"Cancel\"))\n\nOK\n\nCancel\n\n\n\n\nAnimated\nA button can animate to show hidden content\n\n\n\nFAnimatedButton\n\n FAnimatedButton (visible, hidden, tabindex=0, cls='ui animated button',\n                  target_id=None, id=None, title=None, style=None,\n                  accesskey=None, contenteditable=None, dir=None,\n                  draggable=None, enterkeyhint=None, inert=None,\n                  inputmode=None, lang=None, popover=None,\n                  spellcheck=None, translate=None, hx_get=None,\n                  hx_post=None, hx_put=None, hx_delete=None,\n                  hx_patch=None, hx_trigger=None, hx_target=None,\n                  hx_swap=None, hx_include=None, hx_select=None,\n                  hx_indicator=None, hx_push_url=None, hx_confirm=None,\n                  hx_disable=None, hx_replace_url=None, hx_on=None,\n                  **kwargs)\n\nAnimates to show hidden content\n\nFAnimatedButton(\"Next\", \"Last\")\n\n&lt;button class=\"ui animated button\"&gt;\n  &lt;div class=\"visible content\"&gt;Next&lt;/div&gt;\n  &lt;div class=\"hidden content\"&gt;Last&lt;/div&gt;\n&lt;/button&gt;\n\n\n\nshow(FAnimatedButton(\"Next\", \"Last\"))\n\n\n  Next\n  Last\n\n\n\n\nFAnimatedButton(\"Next\", I(cls=\"right arrow icon\"))\n\n&lt;button class=\"ui animated button\"&gt;\n  &lt;div class=\"visible content\"&gt;Next&lt;/div&gt;\n  &lt;div class=\"hidden content\"&gt;\n    &lt;i class=\"right arrow icon\"&gt;&lt;/i&gt;\n  &lt;/div&gt;\n&lt;/button&gt;\n\n\n\nshow(FAnimatedButton(\"Next\", I(cls=\"right arrow icon\")))\n\n\n  Next",
    "crumbs": [
      "Elements",
      "Buttons"
    ]
  },
  {
    "objectID": "nb_cells.html",
    "href": "nb_cells.html",
    "title": "Getting Notebook Cell Contents",
    "section": "",
    "text": "Trying to get contents of nbdev Jupyter notebook cells programatically, to display in a FastHTML app documenting them.\n\n# Get cell 6 from nbs/elements/00_button.ipynb using nbformat\n\nimport nbformat\n\nwith open(\"elements/00_button.ipynb\") as f:\n    nb = nbformat.read(f, as_version=4)\n\ncell = nb.cells[5]\nprint(cell.source)\n\n# | export\n@delegates(Button, keep=True)\ndef FButton(*c, cls=\"ui button\", **kwargs) -&gt; FT:\n    \"A standard Fomantic UI Button, extending the existing Button FastTag.\"\n    return Button(*c, cls=cls, **kwargs)\n\n\n\n# Remove the first line of cell.source\ncell.source = \"\\n\".join(cell.source.split(\"\\n\")[1:])\nprint(cell.source)\n\n@delegates(Button, keep=True)\ndef FButton(*c, cls=\"ui button\", **kwargs) -&gt; FT:\n    \"A standard Fomantic UI Button, extending the existing Button FastTag.\"\n    return Button(*c, cls=cls, **kwargs)\n\n\n\n# Loop through all cells in 'elements/00_button.ipynb'. If the cell is a code cell, print the source code.\nfor cell in nb.cells:\n    if cell.cell_type == \"code\":\n        print(cell.source)\n        # Print index of cell\n        print(nb.cells.index(cell))\n        print(\"\\n\")\n\n#| default_exp button\n2\n\n\n# | export\nfrom dataclasses import dataclass, asdict\nfrom fastcore.utils import *\nfrom fastcore.xml import *\nfrom fastcore.xtras import *\nfrom fastcore.meta import use_kwargs, delegates\nfrom fasthtml.components import *\n3\n\n\n@delegates(Button, keep=True)\ndef FButton(*c, cls=\"ui button\", **kwargs) -&gt; FT:\n    \"A standard Fomantic UI Button, extending the existing Button FastTag.\"\n    return Button(*c, cls=cls, **kwargs)\n5\n\n\nFButton(\"Follow\")\n6\n\n\nshow(FButton(\"Follow\"))\n7\n\n\nFButton(\"Save\", cls=\"ui primary button\"), FButton(\"Discard\")\n9\n\n\nshow(FButton(\"Save\", cls=\"ui primary button\"), FButton(\"Discard\"))\n10\n\n\nshow(FButton(\"OK\", cls=\"ui secondary button\"), FButton(\"Cancel\"))\n11\n\n\n# | export\n@delegates(Button, keep=True)\ndef FAnimatedButton(visible, hidden, tabindex=0, cls=\"ui animated button\", **kwargs) -&gt; FT:\n    \"Animates to show hidden content\"\n    return Button(Div(visible, cls=\"visible content\"), Div(hidden, cls=\"hidden content\"), cls=cls, **kwargs)\n13\n\n\nFAnimatedButton(\"Next\", \"Last\")\n14\n\n\nshow(FAnimatedButton(\"Next\", \"Last\"))\n15\n\n\nFAnimatedButton(\"Next\", I(cls=\"right arrow icon\"))\n16\n\n\nshow(FAnimatedButton(\"Next\", I(cls=\"right arrow icon\")))\n17\n\n\n\n\n\n# HACK: if line 1 has an export directive and line 2 of cell.source starts with @delegates, then it's a FastTag definition\n# Bad thing to do, but it \"works\" for now\nwith open(\"elements/00_button.ipynb\") as f:\n    nb = nbformat.read(f, as_version=4)\n\nfor cell in nb.cells:\n    if cell.cell_type == \"code\" and cell.source.split(\"\\n\")[0] == \"# | export\":\n        print(cell.source)\n        print(nb.cells.index(cell))\n        if cell.source.split(\"\\n\")[1].startswith(\"@delegates\"):\n            print(\"FastTag definition\")\n        print(\"\\n\")\n\n# | export\nfrom dataclasses import dataclass, asdict\nfrom fastcore.utils import *\nfrom fastcore.xml import *\nfrom fastcore.xtras import *\nfrom fastcore.meta import use_kwargs, delegates\nfrom fasthtml.components import *\n3\n\n\n# | export\n@delegates(Button, keep=True)\ndef FButton(*c, cls=\"ui button\", **kwargs) -&gt; FT:\n    \"A standard Fomantic UI Button, extending the existing Button FastTag.\"\n    return Button(*c, cls=cls, **kwargs)\n5\nFastTag definition\n\n\n# | export\n@delegates(Button, keep=True)\ndef FAnimatedButton(visible, hidden, tabindex=0, cls=\"ui animated button\", **kwargs) -&gt; FT:\n    \"Animates to show hidden content\"\n    return Button(Div(visible, cls=\"visible content\"), Div(hidden, cls=\"hidden content\"), cls=cls, **kwargs)\n13\nFastTag definition\n\n\n\n\n\nwith open(\"elements/00_button.ipynb\") as f:\n    nb = nbformat.read(f, as_version=4)\n    \nfts_to_document = []\n\nfor cell in nb.cells:\n    cell_lines = cell.source.split(\"\\n\")\n    if cell.cell_type == \"code\" and cell_lines[0] == \"# | export\":\n        print(cell.source)\n        print(nb.cells.index(cell))\n        \n        # HACK: Find all FastTags in the notebook\n        if cell_lines[2].strip().endswith(\"-&gt; FT:\") or cell_lines[2].strip().endswith(\"-&gt;FT\"):\n            print(\"FastTag definition\")\n            \n            # Append this cell to the list of FastTags to document, but without the export line\n            fts_to_document.append(\"\\n\".join(cell_lines[1:]))\n        print(\"\\n\")\n\n# | export\nfrom dataclasses import dataclass, asdict\nfrom fastcore.utils import *\nfrom fastcore.xml import *\nfrom fastcore.xtras import *\nfrom fastcore.meta import use_kwargs, delegates\nfrom fasthtml.components import *\n3\n\n\n# | export\n@delegates(Button, keep=True)\ndef FButton(*c, cls=\"ui button\", **kwargs) -&gt; FT:\n    \"A standard Fomantic UI Button, extending the existing Button FastTag.\"\n    return Button(*c, cls=cls, **kwargs)\n5\nFastTag definition\n\n\n# | export\n@delegates(Button, keep=True)\ndef FAnimatedButton(visible, hidden, tabindex=0, cls=\"ui animated button\", **kwargs) -&gt; FT:\n    \"Animates to show hidden content\"\n    return Button(Div(visible, cls=\"visible content\"), Div(hidden, cls=\"hidden content\"), cls=cls, **kwargs)\n13\nFastTag definition"
  }
]